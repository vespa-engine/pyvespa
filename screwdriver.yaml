# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

shared:
  image: almalinux:8
  annotations:
    screwdriver.cd/restrictPR: fork

jobs:
  unit-tests:
    requires: [~commit,~pr]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/buildPeriodically: H 11 * * *
    steps:
      - install-docker: |
          dnf install -y dnf-plugins-core
          dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
          dnf install -y docker-ce-cli
          docker system info
          ls -la $SD_DIND_SHARE_PATH
      - install-python: |
          dnf install -y python39-pip python39-devel gcc gcc-c++ # gcc et al required for pytrec_eval
          dnf install -y --enablerepo=powertools pandoc
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
          python3 -m pip install -r docs/sphinx/source/requirements.txt
          python3 -m pip install -r docs/sphinx/source/notebook_requirements.txt
      - run-unit-tests: |
          pytest tests/unit
      - run-doc-tests: |
          pytest vespa --doctest-modules
      - run-doc-linkcheck: |
          sphinx-build -E -D exclude_patterns=getting-started-pyvespa-cloud.ipynb -b linkcheck docs/sphinx/source docs/sphinx/build
          sphinx-build -E -D exclude_patterns=getting-started-pyvespa-cloud.ipynb docs/sphinx/source docs/sphinx/build
          rm -fr docs/sphinx/build

  integration-except-cloud:
    requires: [~commit,~pr]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/buildPeriodically: H 11 * * *
    steps:
      - install-docker: |
          dnf install -y dnf-plugins-core
          dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
          dnf install -y docker-ce-cli
          docker system info
          ls -la $SD_DIND_SHARE_PATH
      - install-python: |
          dnf install -y python39-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
      - run-integration-docker: |
          pytest tests/integration/test_integration_docker.py -s -v

  notebooks-except-cloud:
    requires: [~commit,~pr]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/buildPeriodically: H 11 * * *
    steps:
      - setup: |
          dnf install -y git

      - install-docker: |
          dnf install -y dnf-plugins-core
          dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
          dnf install -y docker-ce-cli
          docker system info
          ls -la $SD_DIND_SHARE_PATH
      - install-python: |
          dnf install -y python39-pip python39-devel gcc gcc-c++ # gcc required for pytrec_eval
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
          python3 -m pip install -r docs/sphinx/source/requirements.txt
          python3 -m pip install -r docs/sphinx/source/notebook_requirements.txt
      - install-openmp: |
          # required for using lightgbm
          dnf install -y libgomp zstd
      - run-notebooks-except-cloud-related: |
          #
          # Exclude non-testable notebooks below
          #
          dnf install -y tree
          echo "All non-cloud notebooks:"

          find docs -name '*.ipynb' ! -name '*cloud*.ipynb' ! -name 'colpali-document-retrieval-vision-language-models.ipynb' | while read f
          do
            echo "running: runnb --allow-not-trusted $f"
            runnb --allow-not-trusted $f
            if [ $? -ne 0 ]
            then
              exit 1
            fi
          done

  integration-cloud:
    requires: [~commit]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/buildPeriodically: H 11 * * *
    secrets:
      - VESPA_TEAM_API_KEY
    environment:
      SD_ZIP_ARTIFACTS: true
    steps:
      - install-python: |
          dnf install -y python39-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
      - run-integration-cloud: |
          pytest tests/integration/test_integration_vespa_cloud.py -s -v

  integration-cloud-token:
    requires: [~commit]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/buildPeriodically: H 11 * * *
    secrets:
      - VESPA_TEAM_API_KEY
      - VESPA_CLOUD_SECRET_TOKEN
    environment:
      SD_ZIP_ARTIFACTS: true
    steps:
      - install-python: |
          dnf install -y python39-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
      - run-integration-cloud: |
          pytest tests/integration/test_integration_vespa_cloud_token.py -s -v

  integration-cloud-vector-search:
    requires: [~commit]
    annotations:
      screwdriver.cd/timeout: 120
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
      screwdriver.cd/buildPeriodically: H 11 * * *
    secrets:
      - VESPA_TEAM_API_KEY
      - VESPA_CLOUD_SECRET_TOKEN
    environment:
      SD_ZIP_ARTIFACTS: true
    steps:
      - install-python: |
          dnf install -y python39-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install -e .[dev]
      - run-integration-cloud: |
          pytest tests/integration/test_integration_vespa_cloud_vector_search.py -s -v

  # notebooks-cloud:
  #   requires: [integration-cloud]
  #   annotations:
  #     screwdriver.cd/timeout: 120
  #     screwdriver.cd/cpu: HIGH
  #     screwdriver.cd/ram: HIGH
  #   secrets:
  #     - VESPA_TEAM_API_KEY
  #     - OPENAI_API_KEY
  #     - CO_API_KEY
  #   environment:
  #     SD_ZIP_ARTIFACTS: true
  #   steps:
  #     - install-python: |
  #         dnf install -y which git-all python39-pip python39-devel gcc-toolset-9-gcc gcc-toolset-9-gcc-c++ # gcc9 required for colbert
  #         source /opt/rh/gcc-toolset-9/enable # enable gcc9 for colbert
  #         python3 -m pip install --upgrade pip
  #         python3 -m pip install -e .[dev]
  #         python3 -m pip install -r docs/sphinx/source/requirements.txt
  #         python3 -m pip install -r docs/sphinx/source/notebook_requirements.txt
      
  #     - run-notebooks-cloud-related: |
  #         echo "PATH:"
  #         echo $PATH
  #         find docs -name '*cloud*.ipynb' -not -name mother-of-all-embedding-models-cloud.ipynb | while read f
  #         do
  #           # Display total and free memory in human-readable format before running each notebook
  #           total_mem=$(free -h | grep Mem | awk '{print $2}')
  #           free_mem=$(free -h | grep Mem | awk '{print $4}')
  #           echo "Before running $f - Total Memory: $total_mem, Free Memory: $free_mem"

  #           # Run the notebook in a subshell
  #           echo "running: runnb --allow-not-trusted $f"
  #           (runnb --allow-not-trusted $f)
  #           # Check the exit status of the last command in the subshell
  #           if [ $? -ne 0 ]
  #           then
  #             echo "Error running $f"
  #             exit 1
  #           fi
  #         done
